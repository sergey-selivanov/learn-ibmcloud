
> Configure project :db
Reckoned version: 0.0.1-dev.0.4+20200331T151344Z

> Configure project :ibmcloud-server
env name: ibmcloud
base name: ibmcloud-server
extension: war
version:0.0.1-dev.0.4+20200331T151344Z
war archive name: ibmcloud-server-0.0.1-dev.0.4+20200331T151344Z-ibmcloud.war

> Task :db:flywayClean
> Task :db:flywayMigrate FAILED

FAILURE: Build failed with an exception.

* What went wrong:
Execution failed for task ':db:flywayMigrate'.
> Error occurred while executing flywayMigrate
  Unable to parse statement in D:\git\learn-ibmcloud\db\sql-migrations\V1.0.0.0__create-tables.sql at line 1 col 1: Incomplete statement at line 1 col 1: drop table if exists Customer;
  
  create table Customer (
      id int not null primary key,
  
      name varchar(255) not null default '',
      description varchar(255),
      address varchar(255),
      isActive boolean not null default 1,
  
      originalId int
  );
  
  
  drop table if exists Project;
  create table Project (
      id int not null primary key,
  
      name varchar(255) not null default '',
      customerId int, -- allow project without customer
      defaultRate decimal(18, 4) not null default 0,
      createdDateUTC date not null,
      isActive boolean not null default 1,
  
      originalId int ,
      originalCustomerId int
  
      -- foreign key (customerId) references Customer (id)
  );
  
  
  drop table if exists Settings;
  create table Settings (
      id int not null primary key,
  
      name varchar(255) not null ,
      val varchar(255)
  );
  
  insert into Settings (id, name, val) values
  (1, 'PAYMENT_RECIPIENT_TITLE', 'Company Intl. Inc');
  
  insert into Settings (id, name, val) values
  (2, 'PAYMENT_TERMS', 'On receipt');
  
  insert into Settings (id, name, val) values
  (3, 'PAYMENT_RECIPIENT_ADDRESS', 'Company Inc.
  Attn: ABCD - J. Doe
  1234 Long Street
  City, ST 12345');
  
  Incomplete statement at line 1 col 1: drop table if exists Customer;
  
  create table Customer (
      id int not null primary key,
  
      name varchar(255) not null default '',
      description varchar(255),
      address varchar(255),
      isActive boolean not null default 1,
  
      originalId int
  );
  
  
  drop table if exists Project;
  create table Project (
      id int not null primary key,
  
      name varchar(255) not null default '',
      customerId int, -- allow project without customer
      defaultRate decimal(18, 4) not null default 0,
      createdDateUTC date not null,
      isActive boolean not null default 1,
  
      originalId int ,
      originalCustomerId int
  
      -- foreign key (customerId) references Customer (id)
  );
  
  
  drop table if exists Settings;
  create table Settings (
      id int not null primary key,
  
      name varchar(255) not null ,
      val varchar(255)
  );
  
  insert into Settings (id, name, val) values
  (1, 'PAYMENT_RECIPIENT_TITLE', 'Company Intl. Inc');
  
  insert into Settings (id, name, val) values
  (2, 'PAYMENT_TERMS', 'On receipt');
  
  insert into Settings (id, name, val) values
  (3, 'PAYMENT_RECIPIENT_ADDRESS', 'Company Inc.
  Attn: ABCD - J. Doe
  1234 Long Street
  City, ST 12345');


* Try:
Run with --info or --debug option to get more log output. Run with --scan to get full insights.

* Exception is:
org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':db:flywayMigrate'.
	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.lambda$executeIfValid$1(ExecuteActionsTaskExecuter.java:205)
	at org.gradle.internal.Try$Failure.ifSuccessfulOrElse(Try.java:263)
	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:203)
	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:184)
	at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:114)
	at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)
	at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:62)
	at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)
	at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)
	at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)
	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)
	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)
	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)
	at org.gradle.internal.operations.DefaultBuildOperationExecutor$CallableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:416)
	at org.gradle.internal.operations.DefaultBuildOperationExecutor$CallableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:406)
	at org.gradle.internal.operations.DefaultBuildOperationExecutor$1.execute(DefaultBuildOperationExecutor.java:165)
	at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:250)
	at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:158)
	at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:102)
	at org.gradle.internal.operations.DelegatingBuildOperationExecutor.call(DelegatingBuildOperationExecutor.java:36)
	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)
	at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:41)
	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:372)
	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:359)
	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:352)
	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:338)
	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.lambda$run$0(DefaultPlanExecutor.java:127)
	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:191)
	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:182)
	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:124)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
Caused by: org.flywaydb.core.api.FlywayException: Error occurred while executing flywayMigrate
Unable to parse statement in D:\git\learn-ibmcloud\db\sql-migrations\V1.0.0.0__create-tables.sql at line 1 col 1: Incomplete statement at line 1 col 1: drop table if exists Customer;

create table Customer (
    id int not null primary key,

    name varchar(255) not null default '',
    description varchar(255),
    address varchar(255),
    isActive boolean not null default 1,

    originalId int
);


drop table if exists Project;
create table Project (
    id int not null primary key,

    name varchar(255) not null default '',
    customerId int, -- allow project without customer
    defaultRate decimal(18, 4) not null default 0,
    createdDateUTC date not null,
    isActive boolean not null default 1,

    originalId int ,
    originalCustomerId int

    -- foreign key (customerId) references Customer (id)
);


drop table if exists Settings;
create table Settings (
    id int not null primary key,

    name varchar(255) not null ,
    val varchar(255)
);

insert into Settings (id, name, val) values
(1, 'PAYMENT_RECIPIENT_TITLE', 'Company Intl. Inc');

insert into Settings (id, name, val) values
(2, 'PAYMENT_TERMS', 'On receipt');

insert into Settings (id, name, val) values
(3, 'PAYMENT_RECIPIENT_ADDRESS', 'Company Inc.
Attn: ABCD - J. Doe
1234 Long Street
City, ST 12345');

Incomplete statement at line 1 col 1: drop table if exists Customer;

create table Customer (
    id int not null primary key,

    name varchar(255) not null default '',
    description varchar(255),
    address varchar(255),
    isActive boolean not null default 1,

    originalId int
);


drop table if exists Project;
create table Project (
    id int not null primary key,

    name varchar(255) not null default '',
    customerId int, -- allow project without customer
    defaultRate decimal(18, 4) not null default 0,
    createdDateUTC date not null,
    isActive boolean not null default 1,

    originalId int ,
    originalCustomerId int

    -- foreign key (customerId) references Customer (id)
);


drop table if exists Settings;
create table Settings (
    id int not null primary key,

    name varchar(255) not null ,
    val varchar(255)
);

insert into Settings (id, name, val) values
(1, 'PAYMENT_RECIPIENT_TITLE', 'Company Intl. Inc');

insert into Settings (id, name, val) values
(2, 'PAYMENT_TERMS', 'On receipt');

insert into Settings (id, name, val) values
(3, 'PAYMENT_RECIPIENT_ADDRESS', 'Company Inc.
Attn: ABCD - J. Doe
1234 Long Street
City, ST 12345');

	at org.flywaydb.gradle.task.AbstractFlywayTask.runTask(AbstractFlywayTask.java:550)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:104)
	at org.gradle.api.internal.project.taskfactory.StandardTaskAction.doExecute(StandardTaskAction.java:49)
	at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:42)
	at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:28)
	at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:727)
	at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:694)
	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$3.run(ExecuteActionsTaskExecuter.java:568)
	at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:402)
	at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:394)
	at org.gradle.internal.operations.DefaultBuildOperationExecutor$1.execute(DefaultBuildOperationExecutor.java:165)
	at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:250)
	at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:158)
	at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:92)
	at org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31)
	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:553)
	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:536)
	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.access$300(ExecuteActionsTaskExecuter.java:109)
	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$TaskExecution.executeWithPreviousOutputFiles(ExecuteActionsTaskExecuter.java:276)
	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$TaskExecution.execute(ExecuteActionsTaskExecuter.java:265)
	at org.gradle.internal.execution.steps.ExecuteStep.lambda$execute$1(ExecuteStep.java:33)
	at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:33)
	at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:26)
	at org.gradle.internal.execution.steps.CleanupOutputsStep.execute(CleanupOutputsStep.java:67)
	at org.gradle.internal.execution.steps.CleanupOutputsStep.execute(CleanupOutputsStep.java:36)
	at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:49)
	at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:34)
	at org.gradle.internal.execution.steps.CancelExecutionStep.execute(CancelExecutionStep.java:43)
	at org.gradle.internal.execution.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:73)
	at org.gradle.internal.execution.steps.TimeoutStep.execute(TimeoutStep.java:54)
	at org.gradle.internal.execution.steps.CatchExceptionStep.execute(CatchExceptionStep.java:34)
	at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:44)
	at org.gradle.internal.execution.steps.SnapshotOutputsStep.execute(SnapshotOutputsStep.java:54)
	at org.gradle.internal.execution.steps.SnapshotOutputsStep.execute(SnapshotOutputsStep.java:38)
	at org.gradle.internal.execution.steps.BroadcastChangingOutputsStep.execute(BroadcastChangingOutputsStep.java:49)
	at org.gradle.internal.execution.steps.CacheStep.executeWithoutCache(CacheStep.java:159)
	at org.gradle.internal.execution.steps.CacheStep.execute(CacheStep.java:72)
	at org.gradle.internal.execution.steps.CacheStep.execute(CacheStep.java:43)
	at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:44)
	at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:33)
	at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:38)
	at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:24)
	at org.gradle.internal.execution.steps.SkipUpToDateStep.executeBecause(SkipUpToDateStep.java:92)
	at org.gradle.internal.execution.steps.SkipUpToDateStep.lambda$execute$0(SkipUpToDateStep.java:85)
	at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:55)
	at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:39)
	at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:76)
	at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:37)
	at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:36)
	at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:26)
	at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:94)
	at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:49)
	at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:79)
	at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:53)
	at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:74)
	at org.gradle.internal.execution.steps.SkipEmptyWorkStep.lambda$execute$2(SkipEmptyWorkStep.java:78)
	at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:78)
	at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:34)
	at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsStartedStep.execute(MarkSnapshottingInputsStartedStep.java:39)
	at org.gradle.internal.execution.steps.LoadExecutionStateStep.execute(LoadExecutionStateStep.java:40)
	at org.gradle.internal.execution.steps.LoadExecutionStateStep.execute(LoadExecutionStateStep.java:28)
	at org.gradle.internal.execution.impl.DefaultWorkExecutor.execute(DefaultWorkExecutor.java:33)
	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:192)
	... 30 more
Caused by: org.flywaydb.core.api.FlywayException: Unable to parse statement in D:\git\learn-ibmcloud\db\sql-migrations\V1.0.0.0__create-tables.sql at line 1 col 1: Incomplete statement at line 1 col 1: drop table if exists Customer;

create table Customer (
    id int not null primary key,

    name varchar(255) not null default '',
    description varchar(255),
    address varchar(255),
    isActive boolean not null default 1,

    originalId int
);


drop table if exists Project;
create table Project (
    id int not null primary key,

    name varchar(255) not null default '',
    customerId int, -- allow project without customer
    defaultRate decimal(18, 4) not null default 0,
    createdDateUTC date not null,
    isActive boolean not null default 1,

    originalId int ,
    originalCustomerId int

    -- foreign key (customerId) references Customer (id)
);


drop table if exists Settings;
create table Settings (
    id int not null primary key,

    name varchar(255) not null ,
    val varchar(255)
);

insert into Settings (id, name, val) values
(1, 'PAYMENT_RECIPIENT_TITLE', 'Company Intl. Inc');

insert into Settings (id, name, val) values
(2, 'PAYMENT_TERMS', 'On receipt');

insert into Settings (id, name, val) values
(3, 'PAYMENT_RECIPIENT_ADDRESS', 'Company Inc.
Attn: ABCD - J. Doe
1234 Long Street
City, ST 12345');

	at org.flywaydb.core.internal.parser.Parser.getNextStatement(Parser.java:287)
	at org.flywaydb.core.internal.parser.Parser.access$000(Parser.java:41)
	at org.flywaydb.core.internal.parser.Parser$ParserSqlStatementIterator.<init>(Parser.java:690)
	at org.flywaydb.core.internal.parser.Parser.parse(Parser.java:109)
	at org.flywaydb.core.internal.sqlscript.ParserSqlScript.parse(ParserSqlScript.java:79)
	at org.flywaydb.core.internal.sqlscript.ParserSqlScript.validate(ParserSqlScript.java:127)
	at org.flywaydb.core.internal.sqlscript.ParserSqlScript.executeInTransaction(ParserSqlScript.java:196)
	at org.flywaydb.core.internal.resolver.sql.SqlMigrationExecutor.canExecuteInTransaction(SqlMigrationExecutor.java:93)
	at org.flywaydb.core.internal.command.DbMigrate.isExecuteGroupInTransaction(DbMigrate.java:312)
	at org.flywaydb.core.internal.command.DbMigrate.applyMigrations(DbMigrate.java:275)
	at org.flywaydb.core.internal.command.DbMigrate.migrateGroup(DbMigrate.java:244)
	at org.flywaydb.core.internal.command.DbMigrate.access$100(DbMigrate.java:54)
	at org.flywaydb.core.internal.command.DbMigrate$2.call(DbMigrate.java:162)
	at org.flywaydb.core.internal.command.DbMigrate$2.call(DbMigrate.java:159)
	at org.flywaydb.core.internal.jdbc.TableLockingExecutionTemplate$1.call(TableLockingExecutionTemplate.java:37)
	at org.flywaydb.core.internal.jdbc.TransactionalExecutionTemplate.execute(TransactionalExecutionTemplate.java:66)
	at org.flywaydb.core.internal.jdbc.TableLockingExecutionTemplate.execute(TableLockingExecutionTemplate.java:33)
	at org.flywaydb.core.internal.database.base.Connection.lock(Connection.java:129)
	at org.flywaydb.core.internal.schemahistory.JdbcTableSchemaHistory.lock(JdbcTableSchemaHistory.java:140)
	at org.flywaydb.core.internal.command.DbMigrate.migrateAll(DbMigrate.java:159)
	at org.flywaydb.core.internal.command.DbMigrate.migrate(DbMigrate.java:137)
	at org.flywaydb.core.Flyway$1.execute(Flyway.java:193)
	at org.flywaydb.core.Flyway$1.execute(Flyway.java:153)
	at org.flywaydb.core.Flyway.execute(Flyway.java:523)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:153)
	at org.flywaydb.gradle.task.FlywayMigrateTask.run(FlywayMigrateTask.java:28)
	at org.flywaydb.gradle.task.AbstractFlywayTask.runTask(AbstractFlywayTask.java:546)
	... 95 more
Caused by: org.flywaydb.core.api.FlywayException: Incomplete statement at line 1 col 1: drop table if exists Customer;

create table Customer (
    id int not null primary key,

    name varchar(255) not null default '',
    description varchar(255),
    address varchar(255),
    isActive boolean not null default 1,

    originalId int
);


drop table if exists Project;
create table Project (
    id int not null primary key,

    name varchar(255) not null default '',
    customerId int, -- allow project without customer
    defaultRate decimal(18, 4) not null default 0,
    createdDateUTC date not null,
    isActive boolean not null default 1,

    originalId int ,
    originalCustomerId int

    -- foreign key (customerId) references Customer (id)
);


drop table if exists Settings;
create table Settings (
    id int not null primary key,

    name varchar(255) not null ,
    val varchar(255)
);

insert into Settings (id, name, val) values
(1, 'PAYMENT_RECIPIENT_TITLE', 'Company Intl. Inc');

insert into Settings (id, name, val) values
(2, 'PAYMENT_TERMS', 'On receipt');

insert into Settings (id, name, val) values
(3, 'PAYMENT_RECIPIENT_ADDRESS', 'Company Inc.
Attn: ABCD - J. Doe
1234 Long Street
City, ST 12345');

	at org.flywaydb.core.internal.parser.Parser.getNextStatement(Parser.java:223)
	... 121 more


* Get more help at https://help.gradle.org

Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.
Use '--warning-mode all' to show the individual deprecation warnings.
See https://docs.gradle.org/6.3/userguide/command_line_interface.html#sec:command_line_warnings

BUILD FAILED in 17s
2 actionable tasks: 2 executed
